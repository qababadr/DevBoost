name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      # Cache Composer dependencies (updated to actions/cache@v4)
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Install dependencies using Composer
      - name: Install dependencies
        run: |
          composer install --no-interaction

      # Run tests
      - name: Run Tests
        run: |
          ./vendor/bin/phpunit

      # Deploy if tests pass
      - name: Deploy to GitHub (Create Release)
        if: success()
        run: |
          echo "Deploying to GitHub Release..."
          
          VERSION="v1.0.0"
          
          # Set Git configuration for push
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

          # Create the Git tag
          git tag $VERSION
          
          # Push the tag using the GITHUB_TOKEN for authentication
          git push --force https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} $VERSION

          # Create GitHub release
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"tag_name": "'$VERSION'", "name": "'$VERSION' Release", "body": "Release description"}' \
            https://api.github.com/repos/${{ github.repository }}/releases
